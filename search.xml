<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[联想小新Air 13IKB Pro 黑苹果CLOVER分享]]></title>
    <url>%2F2019%2F02%2F15%2F%E8%81%94%E6%83%B3%E5%B0%8F%E6%96%B0Air-13IKB-Pro-%E9%BB%91%E8%8B%B9%E6%9E%9CCLOVER%E5%88%86%E4%BA%AB%2F</url>
    <content type="text"><![CDATA[2019-02-23更新 完善hotpatch热补丁，使config.plist更简洁 修复PowerNap唤醒后不自动睡眠的问题 驱动读卡器（注意：必须手动推出内存卡才能执行拔出操作，否则会导致系统重启） 2019-02-15发布 使用hotpatch热补丁 除指纹、读卡器与独显（已屏蔽）外，一切功能正常 添加CPUFriendDataProvider.kext，完善CPU变频 使用VirtualSMC.kext以及其所有插件，抛弃FakeSMC.kext 注意：此CLOVER支持的网卡为DW1830，如网卡硬件不同，请自行更改驱动 下载地址： 1链接:https://pan.baidu.com/s/1_HXhglNXMPZCv_m32ZJwLw 密码:hspz]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>Mac</tag>
        <tag>黑苹果</tag>
        <tag>联想小新</tag>
        <tag>CLOVER</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[黑苹果-笔记本屏蔽独显（DSDT转hotpatch方式）]]></title>
    <url>%2F2019%2F02%2F14%2F%E9%BB%91%E8%8B%B9%E6%9E%9C-%E7%AC%94%E8%AE%B0%E6%9C%AC%E5%B1%8F%E8%94%BD%E7%8B%AC%E6%98%BE%2F</url>
    <content type="text"><![CDATA[提取dsdt和ssdt 开机进入clover引导界面，按F4提取，dsdt和ssdt文件存放在efi分区的EFI/CLOVER/ACPI/origin/里面 反编译dsdt和ssdt文件 挂载EFI分区：Mac-挂载EFI分区 打开终端，复制origin文件夹到桌面 1cp -R /Volumes/&#123;EFI分区卷标&#125;/EFI/CLOVER/ACPI/origin/ ~/Desktop/ 删除除了DSDT和SSDT开头文件以外的所有aml文件 反编译aml文件为dsl文件，（自行安装iasl） 12cd ~/Desktop/originiasl -da -dl *.aml 查找关闭独显的Method 终端运行以下命令，找出相同的dsl文件 12grep -l Method.*_OFF *.dslgrep -l Method.*_INI *.dsl 例如： 使用MaciASL工具打开上面相同名字的dsl文件 搜索 Method (_INI 找到类似下图的 Store (Zero, \_SB.PCI0.RP01.PXSX._ADR) 查看左边树状图该Method的位置 例如图上的位置是\_SB.PCI0.RP01.PXSX，那么，关闭独显的方法就是 \_SB.PCI0.RP01.PXSX._OFF，在后面添加 ._OFF 配置SSDT-DDGPU.aml 使用MaciASL打开SSDT-DDGPU.aml文件 把你找到的_OFF方法添加到Method (_INI, 0, NotSerialized)里面 注意需要添加External，复制上面的if判断，改为自己的_OFF方法 把SSDT-DDGPU.aml放到/CLOVER/ACPI/patched/下面，重启进入关于本机-系统报告-图形卡/显示器 查看]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>Mac</tag>
        <tag>黑苹果</tag>
        <tag>独显</tag>
        <tag>hotpatch</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Windows挂载并访问efi分区]]></title>
    <url>%2F2019%2F02%2F12%2FWindows%E6%8C%82%E8%BD%BD%E5%B9%B6%E8%AE%BF%E9%97%AEefi%E5%88%86%E5%8C%BA%2F</url>
    <content type="text"><![CDATA[打开Power shell或者Cmd123456789101112131415161718输入 diskpart，进入磁盘dos工具输入 list disk，列出所有的磁盘输入 select disk x，x代表你要选的磁盘序号，例如：select disk 0输入 list partition，列出所选磁盘的分区输入 select partition x，x代表你所选磁盘的efi分区序号，例如：select partition 0输入 help setid，查看EFI分区的ID输入 SET ID=ebd0a0a2-b9e5-4433-87c0-68b6b72699c7，此id为上一步查看到的id，即可挂载EFI分区输入 assign letter = x，x为A~Z的未使用的驱动器号，资源管理器已经可以看到EFI分区，但是不能访问，此时需要重启系统，重启完后即可对EFI分区进行读写隐藏EFI分区:输入 diskpart，进入磁盘dos工具输入 list disk，列出所有的磁盘输入 select disk x，x代表你要选的磁盘序号，例如：select disk 0输入 list partition，列出所选磁盘的分区输入 select partition x，x代表你所选磁盘的efi分区序号，例如：select partition 0输入 SET ID=c12a7328-f81f-11d2-ba4b-00a0c93ec93b输入 remove letter = x，x为EFI分区当前的驱动器号]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>EFI</tag>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Mojave改变字体渲染方式]]></title>
    <url>%2F2019%2F02%2F12%2FMojave%E6%94%B9%E5%8F%98%E5%AD%97%E4%BD%93%E6%B8%B2%E6%9F%93%E6%96%B9%E5%BC%8F%2F</url>
    <content type="text"><![CDATA[解决非Retina屏字体发虚问题 打开 【终端】应用，输入下面命令，全局启用【次像素抗锯齿】渲染 1defaults write -g CGFontRenderingFontSmoothingDisabled -bool NO 设置字体【次像素抗锯齿】级别（微调样式）的命令： 1defaults -currentHost write -globalDomain AppleFontSmoothing -int 3 还原命令： 12defaults write -g CGFontRenderingFontSmoothingDisabled -bool YESdefaults -currentHost delete -globalDomain AppleFontSmoothing]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>Mac</tag>
        <tag>黑苹果</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Mac 挂载EFI分区]]></title>
    <url>%2F2019%2F02%2F12%2FMac-%E6%8C%82%E8%BD%BDEFI%E5%88%86%E5%8C%BA%2F</url>
    <content type="text"><![CDATA[查看分区信息123456789101112131415161718TSZs-MacBook-Pro:~ tsz$ diskutil list/dev/disk0 (internal): #: TYPE NAME SIZE IDENTIFIER 0: GUID_partition_scheme 500.1 GB disk0 1: Windows Recovery 523.2 MB disk0s1 2: EFI NO NAME 524.3 MB disk0s2 3: Microsoft Reserved 16.8 MB disk0s3 4: Microsoft Basic Data 274.9 GB disk0s4 5: Apple_APFS Container disk1 224.0 GB disk0s5/dev/disk1 (synthesized): #: TYPE NAME SIZE IDENTIFIER 0: APFS Container Scheme - +224.0 GB disk1 Physical Store disk0s5 1: APFS Volume MacOS 68.9 GB disk1s1 2: APFS Volume Preboot 45.0 MB disk1s2 3: APFS Volume Recovery 517.0 MB disk1s3 4: APFS Volume VM 1.1 GB disk1s4 确定efi分区为disk0的第2顺序分区，即 disk0s2 挂载EFI分区1sudo diskutil mount /dev/disk0s2 卸载EFI分区1sudo diskutil unmount /dev/disk0s2]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>Mac</tag>
        <tag>EFI</tag>
        <tag>黑苹果</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[黑苹果CPU开启HWP实现变频]]></title>
    <url>%2F2019%2F02%2F11%2F%E9%BB%91%E8%8B%B9%E6%9E%9CCPU%E5%BC%80%E5%90%AFHWP%E5%AE%9E%E7%8E%B0%E5%8F%98%E9%A2%91%2F</url>
    <content type="text"><![CDATA[前言 适合使用hwp开启cpu变频的用户 适合已经实现变频但最低频率较高的用户 适合当前CPU主频达不到CPU自身最高频率的用户 查看当前smbios的board-id，开启HWP 打开clover configurator查看board-id 开启hwp，在config.plist的Cpu中勾选HWPEnable 修改plist文件 复制plist文件到桌面，注意路径最后的plist文件与当前系统使用的borad-id一致 1cp /System/Library/Extensions/IOPlatformPluginFamily.kext/Contents/PlugIns/X86PlatformPlugin.kext/Contents/Resources/Mac-CAD6701F7CEA0921.plist ~/Desktop/ 使用PlistEdit pro打开桌面的plist文件 修改Frequencies下面的参数，这里是CPU的最高频率 1#例如 2700 = 2.7GHz 修改FrequencyVectors下面的参数，第二列开头2个字节为CPU最低频率 1#例如 08000000 = 800MHz 添加以下参数使电源管理更加高效，参数后面为布尔值 12345678power_reduced_playbackthermally_optimized_xcodeoptimized_photobooththermally_optimized_xcodeoptimized_screensaversoptimized_slideshowsoptimized_visualizersthermally_optimized_maps 参考下图，Frequencies和FrequencyVectors只留下一个子项，其余删除 生成CPU变频驱动 打开终端 12345678#进入桌面cd ~/Desktop#下载CPUFriendDataProvider.kext生成工具git clone https://github.com/PMheart/CPUFriend#进入脚本目录cd ./CPUFriend/ResourceConverter#运行脚本生成CPUFriendDataProvider.kext，plist文件为上面修改好的./ResourceConverter.sh --kext ~/Desktop/Mac-CAD6701F7CEA0921.plist 查看桌面的文件夹CPUFriend/ResourceConverter/是否已经生成CPUFriendDataProvider.kext驱动 配合lilu和cpufriend实现变频 打开下面网址，下载lilu和CPUFriend驱动 1234#liluhttps://github.com/acidanthera/Lilu/releases#CPUFriendhttps://github.com/acidanthera/CPUFriend/releases 下载完成后，把lilu.kext和CPUFriend.kext，还有CPUFriendDataProvider.kext三个驱动一起放入clover/kexts/Other里面 重启查看CPU变频是否正常]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>Mac</tag>
        <tag>黑苹果</tag>
        <tag>CPU</tag>
        <tag>变频</tag>
        <tag>HWP</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Mac下hexo+github搭建个人博客]]></title>
    <url>%2F2019%2F01%2F29%2FMac%E4%B8%8Bhexo-github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[安装Node.js 官网下载Node.js，打开文件安装 安装Xcode 在苹果商店搜索安装 配置github 新建github账号 创建仓库，注意仓库命名格式为：username.github.io，username要与用户名一致 添加SSHkey 终端输入命令：注意修改邮件地址 1ssh-keygen -t rsa -C "your_email@example.com" 打开~/.ssh/id_rsa.pub文件，复制内容，添加到github的SSH Keys设置里面 输入以下命令，测试sshkey是否生效 1ssh -T git@github.com 如果出现提示 1Are you sure you want to continue connecting (yes/no)? 输入yes 当出现以下提示时，说明ssh已经成功配置 1Hi username! You've successfully authenticated, but GitHub does not provide shell access. 安装hexo1sudo npm install --unsafe-perm --verbose -g hexo 安装时间比较长，请耐心等等 安装完成后，创建一个目录，用于储存搭建网站的所有文件 进入新建的目录，输入以下命令，初始化网站 1hexo init 安装依赖包 1npm install 常用命令 12345hexo new "文章名" #新建文章hexo clean #清除本地缓存hexo generate #生成静态文件hexo deploy #同步到githubhexo server #启动本地网站服务，可以在本地通过localhost:4000来进行访问 配置同步到github 安装插件 1sudo npm install hexo-deployer-git --save 编辑配置文件_config.yml，在deploy节点添加以下信息，注意username为github的用户名，每个：后面都有空格 1234deploy: type: git repo: git@github.com:username/username.github.io.git branch: master 安装加载本地图片插件 1sudo npm install hexo-asset-image --save 安装next主题 进入hexo网站目录，输入以下命令下载next主题 1git clone https://github.com/theme-next/hexo-theme-next theme/next/ 配置hexo的_config.yml，更改主题 12## Themes: https://hexo.io/themes/theme: next 当hexo配置文件有改动的时候，请清理缓存： 1hexo clean]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>Mac</tag>
        <tag>hexo</tag>
        <tag>github</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Windows和MacOS 蓝牙4.0以上鼠标共享]]></title>
    <url>%2F2019%2F01%2F22%2FWindows%E5%92%8CMacOS-%E8%93%9D%E7%89%994-0%E4%BB%A5%E4%B8%8A%E9%BC%A0%E6%A0%87%E5%85%B1%E4%BA%AB%2F</url>
    <content type="text"><![CDATA[MacOS下的操作 关闭蓝牙，打开终端，删除MacOS的蓝牙信息 12sudo rm /private/var/root/Library/Preferences/com.apple.bluetoothd.plistsudo rm /Library/Preferences/com.apple.Bluetooth.plist 进行蓝牙鼠标配对，如果蓝牙里面还存在蓝牙设备信息，请手动删除再进行配对连接 连接成功后，进行蓝牙信息导出到桌面： 12sudo cp /private/var/root/Library/Preferences/com.apple.bluetoothd.plist ~/Desktopsudo cp /Library/Preferences/com.apple.Bluetooth.plist ~/Desktop/ 查看当前用户名，用于修改文件属性 1whoami 修改文件所属用户组，否则无法编辑 12sudo chown -R 用户名 com.apple.Bluetooth.plistsudo chown -R 用户名 com.apple.bluetoothd.plist 用PlistEdit Pro工具打开com.apple.bluetoothd.plist可以看到蓝牙信息 此时蓝牙的mac地址是：D4D365F79AF3 Windows下的 操作 删除所有已配对的蓝牙设备，进行蓝牙鼠标配对 下载PTStool工具，打开Powershell，cd命令进入PTStool工具，然后使用以下命令进入注册表 1.\psexec.exe -s -i \\127.0.0.1 regedit 进入： 1HKEY\_LOCAL\_MACHINE\SYSTEM\CurrentControlSet\Services\BTHPORT\Parameters\Keys\&#123;电脑的蓝牙mac地址&#125;\&#123;鼠标的蓝牙mac地址&#125; 右击导出到reg文件 右击导出的reg文件-&gt;编辑-&gt;复制所有数据到一个txt文档，并保存到U盘上，稍后MacOS会用到 重启进入MacOS 查看保存的txt文件，可以看到蓝牙鼠标mac地址已经发生改变 用PlistEdit Pro工具打开com.apple.bluetoothd.plist 按照图片替换数据，然后保存com.apple.bluetoothd.plist 打开com.apple.Bluetooth.plis，使用查找功能找到所有蓝牙鼠标的mac地址，修改成新的蓝牙mac地址，修改后保存 关闭蓝牙，复制修改好的文件到系统里： 12sudo cp ~/Desktop/com.apple.bluetoothd.plist /private/var/root/Library/Preferences/com.apple.bluetoothd.plistsudo cp ~/Desktop/com.apple.Bluetooth.plist /Library/Preferences/com.apple.Bluetooth.plist 进行修改权限和用户组 1234sudo chmod -R 600 /private/var/root/Library/Preferences/com.apple.bluetoothd.plistsudo chmod -R 600 /Library/Preferences/com.apple.Bluetooth.plistsudo chown root:wheel /private/var/root/Library/Preferences/com.apple.bluetoothd.plistsudo chown root:wheel /Library/Preferences/com.apple.Bluetooth.plist 重启电脑到Windows系统，查看鼠标是否正常连接 再重启MacOS，打开蓝牙，此时蓝牙鼠标会自动连接]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>Mac</tag>
        <tag>黑苹果</tag>
        <tag>蓝牙鼠标</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Cron定时任务]]></title>
    <url>%2F2018%2F05%2F23%2FCron%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%2F</url>
    <content type="text"><![CDATA[cron定时任务常用命令： 123/etc/init.d/cron start #开启cron/etc/init.d/cron stop #停止cron/etc/init.d/cron restart #重启cron 配置cron定时任务 1crontab -e 首次配置会询问用哪种编辑器，默认nano 基本格式 : 1* * * * * command *分别为：分 时 日 月 周，command是要执行的命令。 123456789101112分：0~59时：0~23日：1~31月：1~12周：0～6（0表示星期天）配置文件的一些例子：0 3 * * * 每天凌晨3点执行* 23-7/1 * * * 晚上11点到早上7点之间，每隔一小时执行*/30 * * * * 每半小时执行0 00 * * 0 每星期天的凌晨执行*/1 表示每一 分/时/日/月/周 配置完需要重启cron才能生效]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>树莓派</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[树莓派40pin引脚图]]></title>
    <url>%2F2018%2F05%2F23%2F%E6%A0%91%E8%8E%93%E6%B4%BE40pin%E5%BC%95%E8%84%9A%E5%9B%BE%2F</url>
    <content type="text"><![CDATA[仅供参考]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>树莓派</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[html+php+axjx 局部定时刷新]]></title>
    <url>%2F2018%2F05%2F21%2Fhtml-php-axjx-%E5%B1%80%E9%83%A8%E5%AE%9A%E6%97%B6%E5%88%B7%E6%96%B0%2F</url>
    <content type="text"><![CDATA[html代码：12345678910&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;!-- 引入jquery，js文件请到jquery官网下载--&gt;&lt;script src = "/script/jquery-3.3.1.min.js" type="text/javascript"&gt;&lt;/script&gt;&lt;/head&gt;&lt;body&gt;&lt;div id = "refresh"&gt;&lt;/div&gt; &lt;!-- 给div设置id值--&gt;&lt;/body&gt;&lt;/html&gt; jQurey axjx部分，用来传输数据并定时刷新指定div。 放在html底部或新建js文件并引入： 1234567891011121314151617181920212223&lt;script&gt; setInterval(function()&#123; jQuery.ajax(&#123; type:"POST", //数据提交方式 url:"axjxcheck.php", //提交地址，需要与下面php部分的文件名一致 global:false, //是否全局 dataType:"json", //回调函数接收数据的数据格式 data:"requset=ajax", //提交到php的数据 success:function(msg)&#123; $('#refresh').empty(); //清空id值为refresh的div里面的所有内容 var data=''; if(msg!='')&#123; data = eval("("+msg+")"); //将返回的json数据进行解析，并赋给data &#125; $('#refresh').html(data); //在#refresh中输出 &#125;, error:function() &#123; alert("请求错误"); &#125; &#125;) &#125;, 2000);//每2秒触发一次&lt;/script&gt; PHP部分，php文件名需要与script请求地址一致：123456if($_POST['request']=='ajax') //接收axjx提交的数据并判断数据是否正确&#123; $data="123456789"; echo json_encode($data); //返回json数据 exit;&#125;]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>html</tag>
        <tag>axjx</tag>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[树莓派折腾笔记]]></title>
    <url>%2F2018%2F05%2F20%2F%E6%A0%91%E8%8E%93%E6%B4%BE%E6%8A%98%E8%85%BE%E7%AC%94%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[树莓派 3B+ WiFi设置： 编辑vi /etc/wpa_supplicant/wpa_supplicant.conf文件，在最后面加入： 1234network=&#123;ssid="" #wifi名称psk="" #WiFi密码&#125; ssh-key 公钥存放位置1vi .ssh/authorized_keys 查杀进程123查看进程 ps -aux|grep 进程名称查看端口 netstat -nap|grep 进程ID结束进程 kill -9 进程ID 树莓派之mysql： 首先保证： 1sudo mysql -u root -p #不使用密码或者随便输入密码都能登录 查询plugin的加密方式（默认为：unix_socket）： 1select Host,User,plugin from mysql.user where User='root'; 更改加密方式： 123&gt;&gt; update mysql.user set plugin='mysql_native_password'; #重置加密方式&gt;&gt;GRANT ALL PRIVILEGES ON *.* TO 'root'@'localhost' IDENTIFIED BY 'newpassword' WITH GRANT OPTION; #设置新密码,newpassword填写密码 &gt;&gt; flush privileges; #刷新权限信息 然后就可以正常使用了]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>树莓派</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2018-05-18 创建主站]]></title>
    <url>%2F2018%2F05%2F18%2F%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[静态网站 强大的markdown编辑器 简洁的主题 这是引用：无言胜有言 引用子列表 床前明月光 无序列表 二级无序列表 N级子列表 加粗一下字体 再来个斜体字 斜体加粗 这是分割线 再来个超链接，点击链接到我的个人主站 下面有一个表格 无序列表 引用 分割线 超链接 有序列表 * &gt; — [name] ( 链接 ) 1. +、- &gt;&gt; ** none 2. echo &#39;这是单行代码&#39;; 123456(```) function fun()&#123; echo &quot;这是多行代码&quot;; &#125; fun();(```) 插入本地图片 ![图片描述](相对或绝对路径)]]></content>
      <categories>
        <category>随手记</category>
      </categories>
      <tags>
        <tag>markdown</tag>
      </tags>
  </entry>
</search>
